stages:
  - test
  - build
  - deploy

#regression testing
regression_ubuntu18_python2:
   stage: test
   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_ubuntu18
   script: 
        - which python
        - source etc/tmrg.sh
        - tmrg --help
        - cd tests/
        - ./scripts/regression.py

#regression testing
regression_ubuntu:
   stage: test
   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_ubuntu20
   script: 
        - python3 --version
        - python2 --version
        - source etc/tmrg.sh
        - tmrg --help
        - cd tests/
        - ./scripts/regression.py

#regression testing
regression_ubuntu_venv:
   stage: test
   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_ubuntu20
   script: 
        - python3 -m venv venv
        - source venv/bin/activate
        - python --version
        - tmrg --help
        - cd tests/
        - ./scripts/regression.py

#this is only to check if the documentation can be build
doc_build_not_master:
   stage: test
   image: gitlab-registry.cern.ch/tmrg/tmrg:latest 
   script: 
        - cd doc
        - make latexpdf
        - make html
   except:
        - master

doc_build_master:
   stage: build
   image: gitlab-registry.cern.ch/tmrg/tmrg:latest 
   script: 
        - cd doc
        - make latexpdf
        - make html 
        - mv build/html/ ../public
        - mv build/latex/tmrg.pdf ../public
        - cd ../
        - ./tmrg/release.py
        - mv tmrg.tgz public/
   artifacts:
     paths:
       - public
     # Make it vanish in 1 hour
     expire_in: 1 hour
   only:
     - master

# Deploy to an EOS folder the contents generated
deployment:
  # Executed during the deploy stage
  stage: deploy
  # Only when the master branch is pushed
  only:
    - master
  # Custom docker image providing the needed tools to deploy in EOS
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  script:
  # Script that performs the deploy to EOS. Makes use of the variables defined in the project
  # It will copy the generated content to the folder in EOS
  - deploy-eos
  # do not run any globally defined before_script or after_script for this step
  before_script: []
  after_script: []

# coverage regexp : ^\[INFO\s+\]\s+\|\s+\TOTAL\s+\d+\s+\d+\s+(\d+\%)
