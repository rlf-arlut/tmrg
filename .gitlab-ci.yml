stages:
  - test
  - doc_build
  - doc_deploy

#regression_ubuntu18_python2:
#   stage: test
#   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_ubuntu18
#   script: 
#        - virtualenv venv
#        - source venv/bin/activate
#        - which python
#        - python --version
#        - pip install -e .
#        - pip install coverage
#        - tmrg --help
#        - cd tests/
#        - ./scripts/regression.py

regression_ubuntu20_python3:
  stage: test
  image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_ubuntu20
  script: 
    - source test/create_venv.sh
    - source venv/bin/activate
    - python -m pytest -v
  artifacts:
    reports:
      junit: pytest.xml
      cobertura: coverage.xml

doc_build_not_master:
   stage: doc_build
   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_doc
   script: 
        - cd doc
        - make latexpdf
        - make html
   except:
        - master

doc_build_master:
   stage: doc_build
   image: gitlab-registry.cern.ch/tmrg/tmrg/tmrg_doc
   script: 
        - cd doc
        - make latexpdf
        - make html 
        - mv build/html/ ../public
        - mv build/latex/tmrg.pdf ../public
        - cd ../
        - ./tmrg/release.py
        - mv tmrg.tgz public/
   artifacts:
     paths:
       - public
     expire_in: 1 hour
   only:
     - master

deployment:
  stage: doc_deploy
  only:
    - master
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  script:
  - deploy-eos
  before_script: []
  after_script: []

# coverage regexp : ^\[INFO\s+\]\s+\|\s+\TOTAL\s+\d+\s+\d+\s+(\d+\%)
